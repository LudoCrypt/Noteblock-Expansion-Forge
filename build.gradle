buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        maven { url 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath "com.wynprice.cursemaven:CurseMaven:2.1.4"
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.4'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

version = '1.0'
group = 'net.ludocrypt.nbexpand'
archivesBaseName = 'nbexpand'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'snapshot', version: '20201028-1.16.3'

    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=mixins.nbexpand.json"
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.disableRefMap', 'true'
            mods {
                nbexpand {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg "-mixin.config=mixins.nbexpand.json"
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.disableRefMap', 'true'
            mods {
                nbexpand {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'nbexpand', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                nbexpand {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url 'https://repo.spongepowered.org/repository/maven-public/' }
    jcenter()
    mavenCentral()
    maven { url "https://www.cursemaven.com" }
    maven { url 'https://jitpack.io' }
}

configurations {
    shade
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.4-35.1.12'
    compile 'org.spongepowered:mixin:0.8'
    compile fg.deobf('com.github.LudoCrypt:Forge-Extended-ASM:2.2')
    shade 'com.github.LudoCrypt:Forge-Extended-ASM:2.2'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "nbexpand",
                "Specification-Vendor"    : "nbexpandsareus",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "nbexpandsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, "refmap.nbexpand.json"
}

minecraft {
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
}

jar {
    manifest {
        attributes([
                // Existing properties here
                "MixinConfigs": "mixins.nbexpand.json,mixins.mm.json"
        ])
    }
}

shadowJar {
    classifier = ''
	exclude 'com/chocohead/mm/MM.class'
    configurations = [project.configurations.shade]
}

reobf {
    shadowJar {}
}

tasks.build.dependsOn reobfShadowJar
jar.finalizedBy('reobfShadowJar')